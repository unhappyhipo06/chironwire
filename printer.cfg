# This file contains common pin mappings for the BigTreeTech Octopus
# (non-Pro) boards.

# Important! Do not use this config with an Octopus Pro v1.1 board as
# doing so could result in a heater being inadvertently enabled.

# To use this config, start by identifying the micro-controller on the
# board - it may be an STM32F446, or STM32F429.  Select the
# appropriate micro-controller in "make menuconfig" and select "Enable
# low-level configuration options". For STM32F446 boards the firmware
# should be compiled with a "32KiB bootloader" and a "12MHz crystal"
# clock reference. For STM32F429 boards use a "32KiB bootloader" and
# an "8MHz crystal".

# See docs/Config_Reference.md for a description of parameters.



# Driver0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PG6
full_steps_per_rotation: 200  #set to 400 for 0.9 degree stepper
position_min: 0
position_endstop: 407 #check your measurement
position_max: 407 #check your measurement
homing_speed: 80   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

# Driver1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
microsteps: 16
rotation_distance: 32
Full_steps_per_rotation = 200
#step_distance: .01
endstop_pin: ^!PG9
position_min: -30
position_endstop: -30
position_max: 375 #keeping the Z profiles in the original Chiron position
homing_speed: 80.0


# Driver2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
microsteps: 16
rotation_distance: 40
Full_steps_per_rotation = 200
endstop_pin: probe:z_virtual_endstop
position_min: -1
position_max: 400
homing_speed: 20.0

# Driver3
# The Octopus only has 4 heater outputs which leaves an extra stepper
# This can be used for a second Z stepper, dual_carriage, extruder co-stepper,
# or other accesory such as an MMU
#[stepper_]
#step_pin: PG4
#dir_pin: PC1
#enable_pin: !PA0
#endstop_pin: PG11
#...

# Driver4
[extruder]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
microsteps: 256
rotation_distance: 33.683
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA2 # HE0
sensor_pin: PF4 # T0
sensor_type: ATC Semitec 104NT-4-R025H42G
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 260

#[filament_switch_sensor material_0]
#switch_pin: PG12

# Driver5
#[extruder1]
#step_pin: PC13
#dir_pin: PF0
#enable_pin: !PF1
#heater_pin: PA3 # HE1
#sensor_pin: PF5 # T1
#...

#[filament_switch_sensor material_1]
#switch_pin: PG13

# Driver6
#[extruder2]
#step_pin: PE2
#dir_pin: PE3
#enable_pin: !PD4
#heater_pin: PB10 # HE2
#sensor_pin: PF6 # T2
#...

#[filament_switch_sensor material_2]
#switch_pin: PG14

# Driver7
#[extruder3]
#step_pin: PE6
#dir_pin: PA14
#enable_pin: !PE0
#heater_pin: PB11 # HE3
#sensor_pin: PF7 # T3
#...

#[filament_switch_sensor material_3]
#switch_pin: PG15

[heater_bed]
heater_pin: PA1
sensor_pin: PF3 # TB
sensor_type: EPCOS 100K B57560G104F
control: watermark
min_temp: 0
max_temp: 130

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[fan]
pin: PA8

[heater_fan fan1]
pin: PE5
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 18
#fan_speed: 0.4

#[heater_fan fan2]
#pin: PD12

#[heater_fan fan3]
#pin: PD13

[heater_fan fan4]
pin: PD14

[controller_fan fan5]
pin: PD15

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_11003D001450324E31333220-if00
# CAN bus is also available on this board

[printer]
kinematics: corexz
max_velocity: 400
max_accel: 4000
max_z_velocity: 30
max_z_accel: 200

[virtual_sdcard]
path: /home/pi/printer_data/gcodes

[display_status]

[pause_resume]

########################################
# TMC2209 configuration
########################################

[tmc2209 stepper_x]
uart_pin: PC4
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#[tmc2209 stepper_]
#uart_pin: PC7
##diag_pin: PG11
#run_current: 0.650
#stealthchop_threshold: 999999

#[tmc2209 extruder]
uart_pin: PF2
run_current: 0.700
interpolate: False
#stealthchop_threshold: 999999

#[tmc2209 extruder1]
#uart_pin: PE4
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2209 extruder2]
#uart_pin: PE1
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2209 extruder3]
#uart_pin: PD3
#run_current: 0.800
#stealthchop_threshold: 999999

########################################
# TMC2130 configuration
########################################

#[tmc2130 stepper_x]
#cs_pin: PC4
#spi_bus: spi1
##diag1_pin: PG6
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2130 stepper_y]
#cs_pin: PD11
#spi_bus: spi1
##diag1_pin: PG9
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2130 stepper_z]
#cs_pin: PC6
#spi_bus: spi1
##diag1_pin: PG10
#run_current: 0.650
#stealthchop_threshold: 999999

#[tmc2130 stepper_]
#cs_pin: PC7
#spi_bus: spi1
##diag1_pin: PG11
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2130 extruder]
#cs_pin: PF2
#spi_bus: spi1
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2130 extruder1]
#cs_pin: PE4
#spi_bus: spi1
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2130 extruder2]
#cs_pin: PE1
#spi_bus: spi1
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2130 extruder3]
#cs_pin: PD3
#spi_bus: spi1
#run_current: 0.800
#stealthchop_threshold: 999999

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=PC5

# See the sample-lcd.cfg file for definitions of common LCD displays.

# A [probe] section can be defined instead with a pin: setting identical
# to the sensor_pin: for a bltouch
[bltouch]
sensor_pin: PB7
control_pin: PB6
x_offset: 36
y_offset: 19
z_offset: 2.01
speed: 20.0

[bed_mesh]
speed: 150
horizontal_move_z: 10
mesh_min: 60,60
mesh_max: 340, 340
probe_count: 5,5

[safe_z_home]
home_xy_position: 200,200
speed: 60
z_hop: 10
z_hop_speed: 20

#[neopixel my_neopixel]
#pin: PB0

########################################
# MACRO
########################################


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
